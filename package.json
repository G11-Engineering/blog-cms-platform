{
  "name": "cms-blog-platform",
  "version": "1.0.0",
  "description": "A fully functional CMS/Blog platform with microservices architecture",
  "private": true,
  "workspaces": [
    "frontend",
    "services/user-service",
    "services/content-service",
    "services/media-service",
    "services/category-service",
    "services/comment-service"
  ],
  "scripts": {
    "dev": "docker-compose up -d && npm run dev:frontend",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:services": "concurrently \"npm run dev:user\" \"npm run dev:content\" \"npm run dev:media\" \"npm run dev:category\" \"npm run dev:comment\"",
    "dev:user": "cd services/user-service && npm run dev",
    "dev:content": "cd services/content-service && npm run dev",
    "dev:media": "cd services/media-service && npm run dev",
    "dev:category": "cd services/category-service && npm run dev",
    "dev:comment": "cd services/comment-service && npm run dev",
    "build": "npm run build:frontend && npm run build:services",
    "build:frontend": "cd frontend && npm run build",
    "build:services": "npm run build:user && npm run build:content && npm run build:media && npm run build:category && npm run build:comment",
    "build:user": "cd services/user-service && npm run build",
    "build:content": "cd services/content-service && npm run build",
    "build:media": "cd services/media-service && npm run build",
    "build:category": "cd services/category-service && npm run build",
    "build:comment": "cd services/comment-service && npm run build",
    "test": "npm run test:frontend && npm run test:services",
    "test:frontend": "cd frontend && npm run test",
    "test:services": "npm run test:user && npm run test:content && npm run test:media && npm run test:category && npm run test:comment",
    "test:user": "cd services/user-service && npm run test",
    "test:content": "cd services/content-service && npm run test",
    "test:media": "cd services/media-service && npm run test",
    "test:category": "cd services/category-service && npm run test",
    "test:comment": "cd services/comment-service && npm run test",
    "install:all": "npm install && npm run install:frontend && npm run install:services",
    "install:frontend": "cd frontend && npm install",
    "install:services": "npm run install:user && npm run install:content && npm run install:media && npm run install:category && npm run install:comment",
    "install:user": "cd services/user-service && npm install",
    "install:content": "cd services/content-service && npm install",
    "install:media": "cd services/media-service && npm install",
    "install:category": "cd services/category-service && npm install",
    "install:comment": "cd services/comment-service && npm install",
    "start": "docker-compose up -d",
    "stop": "docker-compose down",
    "restart": "docker-compose restart",
    "logs": "docker-compose logs -f",
    "logs:user": "docker-compose logs -f user-service",
    "logs:content": "docker-compose logs -f content-service",
    "logs:media": "docker-compose logs -f media-service",
    "logs:category": "docker-compose logs -f category-service",
    "logs:comment": "docker-compose logs -f comment-service",
    "logs:frontend": "docker-compose logs -f frontend",
    "health": "node scripts/health-check.js",
    "test:services": "node scripts/test-services.js",
    "setup:demo": "node scripts/setup-demo-data.js",
    "reset": "docker-compose down -v && docker-compose up -d",
    "clean": "docker-compose down -v --remove-orphans && docker system prune -f"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "typescript": "^5.3.3",
    "axios": "^1.6.2"
  }
}